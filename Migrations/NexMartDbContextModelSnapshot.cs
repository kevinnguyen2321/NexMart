// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NexMart.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NexMart.Migrations
{
    [DbContext(typeof(NexMartDbContext))]
    partial class NexMartDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c3aaeb97-d2ba-4a53-a521-4eea61e59b35",
                            Name = "Admin",
                            NormalizedName = "admin"
                        },
                        new
                        {
                            Id = "c4bbeb97-d3ba-4b53-b521-5ffa61e59b36",
                            Name = "Customer",
                            NormalizedName = "customer"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "80809681-4056-4dd8-8146-d25ca24eb2a6",
                            Email = "admina@strator.comx",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEPP3zQBnWqhiLqHpjtlbP0fcT5OEF7SMidbmMseNyJWl7ZzK3GJjd9RoP8o+HdU/fA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5f0dd6af-c96c-4418-a454-8f49b080a169",
                            TwoFactorEnabled = false,
                            UserName = "Administrator"
                        },
                        new
                        {
                            Id = "d6bc2e97-e1fc-4a2f-b112-6ff861e69c37",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d1656712-f331-4ad5-b9e4-8ae8972fd7b8",
                            Email = "customer1@company.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEPFGg6LlBOjF6aPCUq+7aCdSwgp260aOdNdjHdW1a3QZbyZ6qIoEvlHTTdAzrdtJ3Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5fb186ca-bd34-42c2-8932-4273732401a1",
                            TwoFactorEnabled = false,
                            UserName = "customer1"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            RoleId = "c3aaeb97-d2ba-4a53-a521-4eea61e59b35"
                        },
                        new
                        {
                            UserId = "d6bc2e97-e1fc-4a2f-b112-6ff861e69c37",
                            RoleId = "c4bbeb97-d3ba-4b53-b521-5ffa61e59b36"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NexMart.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Home & Kitchen"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Toys & Games"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Health & Beauty"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sports & Outdoors"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Automotive"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Pet Supplies"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Office Products"
                        });
                });

            modelBuilder.Entity("NexMart.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2024, 12, 27, 19, 57, 9, 9, DateTimeKind.Local).AddTicks(5015),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 2,
                            OrderDate = new DateTime(2024, 12, 30, 19, 57, 9, 9, DateTimeKind.Local).AddTicks(5055),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 3,
                            OrderDate = new DateTime(2025, 1, 1, 19, 57, 9, 9, DateTimeKind.Local).AddTicks(5057),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 4,
                            OrderDate = new DateTime(2025, 1, 3, 19, 57, 9, 9, DateTimeKind.Local).AddTicks(5059),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 5,
                            OrderDate = new DateTime(2025, 1, 5, 19, 57, 9, 9, DateTimeKind.Local).AddTicks(5061),
                            UserProfileId = 2
                        });
                });

            modelBuilder.Entity("NexMart.Models.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 10,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            ProductId = 20,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 2,
                            ProductId = 30,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 2,
                            ProductId = 40,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 3,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 6,
                            OrderId = 3,
                            ProductId = 60,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            OrderId = 4,
                            ProductId = 70,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 8,
                            OrderId = 4,
                            ProductId = 80,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 9,
                            OrderId = 5,
                            ProductId = 75,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            OrderId = 5,
                            ProductId = 81,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("NexMart.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Latest model with advanced features.",
                            Name = "Smartphone",
                            Price = 699.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "High-performance laptop for work and gaming.",
                            Name = "Laptop",
                            Price = 999.99m,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Noise-cancelling and long battery life.",
                            Name = "Wireless Earbuds",
                            Price = 129.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Track your fitness and stay connected.",
                            Name = "Smartwatch",
                            Price = 199.99m,
                            StockQuantity = 70
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Ultra HD display for a cinematic experience.",
                            Name = "4K TV",
                            Price = 499.99m,
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "Next-gen console with immersive graphics.",
                            Name = "Gaming Console",
                            Price = 399.99m,
                            StockQuantity = 25
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Description = "Portable speaker with deep bass.",
                            Name = "Bluetooth Speaker",
                            Price = 89.99m,
                            StockQuantity = 80
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Description = "1TB storage for backups and data.",
                            Name = "External Hard Drive",
                            Price = 59.99m,
                            StockQuantity = 40
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Description = "Capture memories in stunning detail.",
                            Name = "Digital Camera",
                            Price = 349.99m,
                            StockQuantity = 15
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Description = "Lightweight tablet for on-the-go use.",
                            Name = "Tablet",
                            Price = 299.99m,
                            StockQuantity = 60
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Description = "100% cotton and breathable.",
                            Name = "Men's T-Shirt",
                            Price = 19.99m,
                            StockQuantity = 150
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Description = "Comfortable and stylish fit.",
                            Name = "Women's Jeans",
                            Price = 49.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Description = "Keeps you warm in extreme cold.",
                            Name = "Winter Jacket",
                            Price = 89.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            Description = "Perfect for workouts or casual wear.",
                            Name = "Sports Hoodie",
                            Price = 39.99m,
                            StockQuantity = 80
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Description = "Comfortable and trendy footwear.",
                            Name = "Sneakers",
                            Price = 69.99m,
                            StockQuantity = 120
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Description = "Perfect for office or events.",
                            Name = "Formal Shirt",
                            Price = 29.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            Description = "Lightweight and flowy fabric.",
                            Name = "Skirt",
                            Price = 24.99m,
                            StockQuantity = 70
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 2,
                            Description = "Adjustable size for comfort.",
                            Name = "Baseball Cap",
                            Price = 14.99m,
                            StockQuantity = 200
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 2,
                            Description = "Flexible and breathable material.",
                            Name = "Yoga Pants",
                            Price = 34.99m,
                            StockQuantity = 90
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 2,
                            Description = "Durable and stylish accessory.",
                            Name = "Leather Belt",
                            Price = 19.99m,
                            StockQuantity = 60
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 3,
                            Description = "Brew fresh coffee every morning with ease.",
                            Name = "Coffee Maker",
                            Price = 59.99m,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 3,
                            Description = "Perfect for smoothies, soups, and sauces.",
                            Name = "Blender",
                            Price = 39.99m,
                            StockQuantity = 40
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 3,
                            Description = "Healthier frying with little to no oil.",
                            Name = "Air Fryer",
                            Price = 89.99m,
                            StockQuantity = 25
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 3,
                            Description = "Durable pots and pans with nonstick coating.",
                            Name = "Nonstick Cookware Set",
                            Price = 99.99m,
                            StockQuantity = 15
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 3,
                            Description = "Powerful suction for deep cleaning.",
                            Name = "Vacuum Cleaner",
                            Price = 129.99m,
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 3,
                            Description = "Compact and efficient heating appliance.",
                            Name = "Microwave Oven",
                            Price = 149.99m,
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 3,
                            Description = "Quickly boils water for tea or coffee.",
                            Name = "Electric Kettle",
                            Price = 29.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 3,
                            Description = "Sturdy and rust-proof drying rack.",
                            Name = "Dish Rack",
                            Price = 19.99m,
                            StockQuantity = 60
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 3,
                            Description = "Cooks food faster and retains nutrients.",
                            Name = "Pressure Cooker",
                            Price = 79.99m,
                            StockQuantity = 35
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 3,
                            Description = "Elegant stainless steel knives and forks.",
                            Name = "Cutlery Set",
                            Price = 49.99m,
                            StockQuantity = 70
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 4,
                            Description = "A bestselling page-turner full of suspense.",
                            Name = "Fiction Novel",
                            Price = 14.99m,
                            StockQuantity = 80
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 4,
                            Description = "Motivational tips for personal growth.",
                            Name = "Self-Help Guide",
                            Price = 19.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 4,
                            Description = "Delicious recipes for everyday cooking.",
                            Name = "Cookbook",
                            Price = 24.99m,
                            StockQuantity = 60
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 4,
                            Description = "An imaginative journey across galaxies.",
                            Name = "Science Fiction Epic",
                            Price = 29.99m,
                            StockQuantity = 40
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 4,
                            Description = "The life story of an influential figure.",
                            Name = "Biography",
                            Price = 17.99m,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 4,
                            Description = "Magic and heroism in an epic tale.",
                            Name = "Fantasy Adventure",
                            Price = 14.99m,
                            StockQuantity = 70
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 4,
                            Description = "A gripping whodunit with twists and turns.",
                            Name = "Mystery Thriller",
                            Price = 12.99m,
                            StockQuantity = 90
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 4,
                            Description = "Bright and engaging stories for kids.",
                            Name = "Children's Picture Book",
                            Price = 9.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 4,
                            Description = "Rich narratives set in the past.",
                            Name = "Historical Fiction",
                            Price = 19.99m,
                            StockQuantity = 45
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 4,
                            Description = "Beautifully written verses to inspire.",
                            Name = "Poetry Collection",
                            Price = 11.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 5,
                            Description = "Colorful blocks to encourage creativity.",
                            Name = "Building Blocks Set",
                            Price = 24.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 5,
                            Description = "A fun strategy game for the whole family.",
                            Name = "Board Game",
                            Price = 29.99m,
                            StockQuantity = 40
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 5,
                            Description = "Detailed collectible for kids and adults.",
                            Name = "Action Figure",
                            Price = 19.99m,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 5,
                            Description = "Soft and cuddly companion for children.",
                            Name = "Stuffed Animal",
                            Price = 14.99m,
                            StockQuantity = 80
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 5,
                            Description = "Challenging puzzles for brain exercise.",
                            Name = "Puzzle Set",
                            Price = 12.99m,
                            StockQuantity = 60
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 5,
                            Description = "Fast and fun RC vehicle for kids.",
                            Name = "Remote Control Car",
                            Price = 39.99m,
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 5,
                            Description = "Detailed dollhouse for imaginative play.",
                            Name = "Dollhouse",
                            Price = 49.99m,
                            StockQuantity = 15
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 5,
                            Description = "Safe and durable swing for outdoor fun.",
                            Name = "Outdoor Swing",
                            Price = 59.99m,
                            StockQuantity = 25
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 5,
                            Description = "Portable card game for travel or parties.",
                            Name = "Card Game",
                            Price = 9.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 5,
                            Description = "Includes paint, brushes, and crayons.",
                            Name = "Kids' Art Kit",
                            Price = 19.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 6,
                            Description = "Hydrates and nourishes dry skin.",
                            Name = "Moisturizing Lotion",
                            Price = 14.99m,
                            StockQuantity = 40
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 6,
                            Description = "Brightens skin and reduces dark spots.",
                            Name = "Vitamin C Serum",
                            Price = 24.99m,
                            StockQuantity = 35
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 6,
                            Description = "For soft and healthy hair.",
                            Name = "Shampoo & Conditioner Set",
                            Price = 19.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 6,
                            Description = "Provides a deep and thorough clean.",
                            Name = "Electric Toothbrush",
                            Price = 29.99m,
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 6,
                            Description = "Includes essentials for daily makeup.",
                            Name = "Makeup Kit",
                            Price = 49.99m,
                            StockQuantity = 25
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 6,
                            Description = "Relax with soothing aromatherapy.",
                            Name = "Essential Oil Diffuser",
                            Price = 34.99m,
                            StockQuantity = 15
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 6,
                            Description = "Tracks activity, heart rate, and sleep.",
                            Name = "Fitness Tracker",
                            Price = 59.99m,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 6,
                            Description = "Includes hydrating and purifying masks.",
                            Name = "Face Mask Pack",
                            Price = 12.99m,
                            StockQuantity = 70
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 7,
                            Description = "Non-slip mat for yoga and exercise.",
                            Name = "Yoga Mat",
                            Price = 19.99m,
                            StockQuantity = 40
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 7,
                            Description = "Lightweight tent for 2 people.",
                            Name = "Camping Tent",
                            Price = 89.99m,
                            StockQuantity = 25
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 7,
                            Description = "Durable backpack with multiple compartments.",
                            Name = "Hiking Backpack",
                            Price = 49.99m,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 7,
                            Description = "Telescopic fishing rod for outdoor adventures.",
                            Name = "Fishing Rod",
                            Price = 39.99m,
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 7,
                            Description = "Official size and weight basketball.",
                            Name = "Basketball",
                            Price = 29.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 7,
                            Description = "Warm and lightweight sleeping bag.",
                            Name = "Sleeping Bag",
                            Price = 34.99m,
                            StockQuantity = 35
                        },
                        new
                        {
                            Id = 65,
                            CategoryId = 7,
                            Description = "Insulated bottle to keep drinks hot or cold.",
                            Name = "Water Bottle",
                            Price = 14.99m,
                            StockQuantity = 80
                        },
                        new
                        {
                            Id = 66,
                            CategoryId = 7,
                            Description = "Adjustable weights for strength training.",
                            Name = "Dumbbell Set",
                            Price = 59.99m,
                            StockQuantity = 15
                        },
                        new
                        {
                            Id = 67,
                            CategoryId = 7,
                            Description = "Protective helmet for cycling.",
                            Name = "Bicycle Helmet",
                            Price = 39.99m,
                            StockQuantity = 45
                        },
                        new
                        {
                            Id = 68,
                            CategoryId = 7,
                            Description = "Lightweight poles for hiking.",
                            Name = "Trekking Poles",
                            Price = 24.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 69,
                            CategoryId = 8,
                            Description = "Includes sponge, soap, and microfiber towel.",
                            Name = "Car Wash Kit",
                            Price = 29.99m,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 70,
                            CategoryId = 8,
                            Description = "Portable vacuum for interior cleaning.",
                            Name = "Car Vacuum Cleaner",
                            Price = 49.99m,
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 71,
                            CategoryId = 8,
                            Description = "Energy-efficient and bright LED headlights.",
                            Name = "LED Headlights",
                            Price = 79.99m,
                            StockQuantity = 15
                        },
                        new
                        {
                            Id = 72,
                            CategoryId = 8,
                            Description = "Compact and easy-to-use air compressor.",
                            Name = "Tire Inflator",
                            Price = 39.99m,
                            StockQuantity = 25
                        },
                        new
                        {
                            Id = 73,
                            CategoryId = 8,
                            Description = "Records high-definition video for safety.",
                            Name = "Dashboard Camera",
                            Price = 99.99m,
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 74,
                            CategoryId = 8,
                            Description = "Stylish and durable covers for car seats.",
                            Name = "Car Seat Cover Set",
                            Price = 59.99m,
                            StockQuantity = 18
                        },
                        new
                        {
                            Id = 75,
                            CategoryId = 9,
                            Description = "Durable chew toy for dogs of all sizes.",
                            Name = "Dog Chew Toy",
                            Price = 9.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 76,
                            CategoryId = 9,
                            Description = "Sturdy post to keep your cat entertained.",
                            Name = "Cat Scratching Post",
                            Price = 24.99m,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 77,
                            CategoryId = 9,
                            Description = "Non-slip bowl for feeding your pets.",
                            Name = "Pet Food Bowl",
                            Price = 7.99m,
                            StockQuantity = 80
                        },
                        new
                        {
                            Id = 78,
                            CategoryId = 9,
                            Description = "Complete kit for setting up a home aquarium.",
                            Name = "Aquarium Starter Kit",
                            Price = 49.99m,
                            StockQuantity = 15
                        },
                        new
                        {
                            Id = 79,
                            CategoryId = 9,
                            Description = "Strong and adjustable leash for dogs.",
                            Name = "Dog Leash",
                            Price = 14.99m,
                            StockQuantity = 60
                        },
                        new
                        {
                            Id = 80,
                            CategoryId = 10,
                            Description = "Comfortable and adjustable chair for office use.",
                            Name = "Ergonomic Office Chair",
                            Price = 149.99m,
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 81,
                            CategoryId = 10,
                            Description = "Compact and responsive keyboard-mouse combo.",
                            Name = "Wireless Keyboard and Mouse",
                            Price = 39.99m,
                            StockQuantity = 35
                        },
                        new
                        {
                            Id = 82,
                            CategoryId = 10,
                            Description = "Keeps your desk neat and clutter-free.",
                            Name = "Desk Organizer",
                            Price = 19.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 83,
                            CategoryId = 10,
                            Description = "Set of 3 notebooks for work or study.",
                            Name = "Notebook Set",
                            Price = 12.99m,
                            StockQuantity = 60
                        },
                        new
                        {
                            Id = 84,
                            CategoryId = 10,
                            Description = "Adjustable lamp with LED lighting.",
                            Name = "Office Desk Lamp",
                            Price = 29.99m,
                            StockQuantity = 40
                        });
                });

            modelBuilder.Entity("NexMart.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "101 Main Street",
                            FirstName = "Admina",
                            IdentityUserId = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            LastName = "Strator"
                        },
                        new
                        {
                            Id = 2,
                            Address = " 220 High Street",
                            FirstName = "Tom",
                            IdentityUserId = "d6bc2e97-e1fc-4a2f-b112-6ff861e69c37",
                            LastName = "Jones"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexMart.Models.Order", b =>
                {
                    b.HasOne("NexMart.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("NexMart.Models.OrderProduct", b =>
                {
                    b.HasOne("NexMart.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NexMart.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NexMart.Models.Product", b =>
                {
                    b.HasOne("NexMart.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NexMart.Models.UserProfile", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("NexMart.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
